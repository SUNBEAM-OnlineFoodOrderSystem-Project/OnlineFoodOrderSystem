package com.foodapp.controller.restaurant;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.foodapp.model.MenuItem;
import com.foodapp.service.restaurant.MenuServiceImpl;

import lombok.RequiredArgsConstructor;

@CrossOrigin(origins = "http://localhost:5174")
@RestController
@RequestMapping("/api/restaurant/menu")
@RequiredArgsConstructor
public class MenuController {

	@Autowired
    private MenuServiceImpl service;
	
	
	 @GetMapping("/")
	    public List<MenuItem> getAllItems() {
	        return service.getAllItems();
	    }
	
	 @GetMapping("/{id}")
	    public ResponseEntity<MenuItem> getItem(@PathVariable Integer id) {
	        return service.getItemById(id)
	                .map(ResponseEntity::ok)
	                .orElse(ResponseEntity.notFound().build());
	    }
	
        
	    
	    @PostMapping
	    public MenuItem createItem(@RequestBody MenuItem item) {
	        return service.addItem(item);
	    }
	    
	    
	    @PutMapping("/{id}")
	    public ResponseEntity<MenuItem> updateItem(@PathVariable Integer id, @RequestBody MenuItem item) {
	        try {
	            MenuItem updated = service.updateItem(id, item);
	            return ResponseEntity.ok(updated);
	        } catch (RuntimeException e) {
	            return ResponseEntity.notFound().build();
	        }
	    }
	    
	    @DeleteMapping("/{id}")
	    public ResponseEntity<Void> deleteItem(@PathVariable Integer id) {
	        service.deleteItem(id);
	        return ResponseEntity.noContent().build();
	    }
	
	    
	    
	    
	
}
